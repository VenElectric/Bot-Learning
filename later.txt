// const color = { name: "Blue", value: "#0056FF" };
    // const consentEmbed = new EmbedBuilder()
    //   .setTitle(color.name)
    //   .setColor(color.value)
    //   .setDescription(color.value)
    //   .addFields(
    //     { name: "Inline field title", value: "Press for an interaction" },
    //     { name: "\u200B", value: "\u200B" }
    //   )
    //   .setTimestamp();
    // const button = new ButtonBuilder()
    //   .setCustomId("primary")
    //   .setLabel("Primary")
    //   .setStyle(ButtonStyle.Primary);

    // const row = new ActionRowBuilder().addComponents(button);

    // const filter = (i:any) =>
    //   i.customId === "primary";

    // const collector = interaction.channel.createMessageComponentCollector({
    //   filter,
    //   time: 15000,
    // });

    // collector.on("collect", async (interaction:any) => {
    //   console.log(chalk.bgGreen("COLLECTOR INTERACTION"),interaction)
    //   collector.stop();
    //   // await interaction.update({ content: "A button was clicked!", components: [] });
    // });

    // collector.on("end", (collected:any) =>
    //   console.log(`Collected ${collected.size} items`)
    // );

    await interaction.reply("@here");
    // const thread = await interaction.channel.threads.create({
    //     name: 'test-thread',
    //     autoArchiveDuration: 60,
    //     reason: 'Needed a separate thread for food',
    // });

    // if (thread.joinable) await thread.join();

    // setTimeout(async () => {
    //     await thread.delete();
    // },3000)

    // console.log(`Created thread: ${thread.name}`);
    // await interaction.reply()

    try {
      console.log(interaction.member.guild.voiceStates.voiceStates)
      // const voiceChannel = await interaction.client.channels.fetch("723744588346556420")
      const player = createAudioPlayer({
        behaviors: {
          noSubscriber: NoSubscriberBehavior.Pause,
        },
      });
      const connection = joinVoiceChannel({
        channelId: "723744588346556420",
        guildId: "723744588346556416",
        adapterCreator: interaction.guild.voiceAdapterCreator,
      });

      // Subscribe the connection to the audio player (will play audio on the voice connection)

      // subscription could be undefined if the connection is destroyed!

      const resource = createAudioResource("./src/Sounds/AC_Bell_Dong.wav");
      player.play(resource);
      const subscription = connection.subscribe(player);
      if (subscription) {
        // Unsubscribe after 5 seconds (stop playing audio on the voice connection)
        setTimeout(() => subscription.unsubscribe(), 10000);
      }
      console.log("pong!");
      setTimeout(() => {
        player.stop();
      }, 10000);

      player.on('error', (error:any) => {
        console.error(`Error: ${error.message} with resource ${error.resource.metadata.title}`);
        player.stop();
        subscription.unsubscribe();
      });
    } catch (error) {
      console.log(error);
    }